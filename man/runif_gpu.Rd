% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random.R
\name{runif_gpu}
\alias{runif_gpu}
\title{Generate Uniform Random Numbers Using GPU}
\usage{
runif_gpu(n, min = 0, max = 1, nthread = 32, dp = FALSE)
}
\arguments{
\item{n}{number of observations. This must be a scalar.}

\item{min, max}{lower and upper bounds of the distribution. Must be finite.}

\item{nthread}{number of threads launched per block.}

\item{dp}{whether calculate using double precision. Default is FALSE.}
}
\value{
a vector of random deviates.
}
\description{
This function generates random numbers from a uniform distribution.
}
\examples{
n <- 2^20
dat1 <- ppda::runif_gpu(n)
dat2 <- stats::runif(n)
den1 <- density(dat1)
den2 <- density(dat2)

## Identical result
par(mfrow=c(1, 2), mar = c(4, 5.3, 0.82, 1))
hist(dat2, breaks = "fd", freq = FALSE, ylim = c(0, 1.1))
lines(den1$x, den1$y,lwd=2)
hist(dat1, breaks = "fd", freq = FALSE, ylim = c(0, 1.1))
lines(den2$x, den2$y,lwd=2)
par(mfrow=c(1,1))

\dontrun{
require(microbenchmark)
res <- microbenchmark(ppda::runif_gpu(n, dp=FALSE), 
                      ppda::runif_gpu(n, dp=TRUE),
                      stats::runif(n), times=100L)
## Unit: milliseconds
##                        expr       min        lq      mean    median  
##  ppda::runif(n, dp = FALSE)  3.960948  4.710212  5.179495  4.877518  
##  ppda::runif(n, dp = TRUE)   5.876643  6.592802  7.122335  6.731998  
##             stats::runif(n) 23.213792 23.983485 24.776863 24.022213 
##        uq       max neval cld
##  5.310155  28.70379   100   a  
##  6.957797  31.85638   100   b 
## 24.789670  49.04686   100   c
}
}
