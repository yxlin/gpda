% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random.R
\name{rtnorm_gpu}
\alias{rtnorm_gpu}
\title{Generate Random Numbers from a Truncated Normal Distribution}
\usage{
rtnorm_gpu(n, mean = 0, sd = 1, lower = -Inf, upper = Inf,
  nthread = 32, dp = FALSE)
}
\arguments{
\item{n}{number of observations. Must be scalar an integer}

\item{mean}{mean. Must be a scalar}

\item{sd}{standard deviations. Must be a scalar}

\item{lower}{lower bound. Must be a scalar}

\item{upper}{upper bound. Must be a scalar}

\item{nthread}{number of threads launched per block.}

\item{dp}{whether calculate using double precision. Default is FALSE.}
}
\value{
a double vector
}
\description{
This function generates random numbers from a truncated normal 
distribution.
}
\examples{
n <- 2^20
dat1 <- ppda::rtnorm_gpu(n, mean=-1, sd=1.2, lower=0, upper=Inf)

\dontrun{
## https://github.com/TasCL/tnorm
dat2 <- tnorm::rtnorm(n, mean=-1, sd=1.2, lower=0, upper=Inf)
dat3 <- msm::rtnorm(n, mean=-1, sd=1.2, lower=0, upper=Inf)
den2 <- density(dat2)
den3 <- density(dat3)
summary(dat2)
summary(dat3)
}

den1 <- density(dat1)
summary(dat1)

\dontrun{
par(mfrow=c(1,3))
hist(dat2, breaks="fd", freq=FALSE)
lines(den1$x, den1$y,lwd=2) ## gpu
lines(den2$x, den2$y,lwd=2) ## tnorm
lines(den3$x, den3$y,lwd=2) ## msn

hist(dat1, breaks="fd", freq=FALSE)
lines(den1$x, den1$y,lwd=2) ## gpu
lines(den2$x, den2$y,lwd=2) ## tnorm
lines(den3$x, den3$y,lwd=2) ## msn

hist(dat3, breaks="fd", freq=FALSE)
lines(den1$x, den1$y,lwd=2) ## gpu
lines(den2$x, den2$y,lwd=2) ## tnorm
lines(den3$x, den3$y,lwd=2) ## msn
par(mfrow=c(1,1))
}

## Unit: milliseconds
##            expr         min         lq       mean     median         
##  ppda::rtnorm(n)   1.173537   1.417016   1.978613   1.423757   
## tnorm::rtnorm(n)   7.475374   8.317984   8.544317   8.345958   
##   msm::rtnorm(n)  54.597366 109.426265 103.025877 110.050924 
##         uq        max
##   1.580943   6.976541
##   9.120224  10.220493
## 119.054471 125.192521

}
